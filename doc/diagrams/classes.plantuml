@startuml
skinparam linetype polyline
skinparam classAttributeIconSize 0
skinparam style strictuml


abstract class CookieOnDemandSystem{
  login()
  logout()
  createAccount()
  getOrders()
  getStores()
  getCookies()
}

class CustomerSystem {
  createOrder()
  manageOrderContent()
  subscribeToLoyaltyProgramm()
  selectStore()
  selectPickupDate()
  viewHistory()
}


class BackOfficeSystem{
  updateOrder()
  updateStore()
  getAccounts()
  updateAccount()
  updateCookies()
}

enum "<enumeration> \n EAccountType"{
  BRAND_MANAGER
  COOK
  CUSTOMER
  STORE_EMPLOYEE
  STORE_MANAGER
}
enum "<enumeration> \n EIngredientType"{
  DOUGH
  FLAVOUR
  TOPPING
  MIX
}

enum "<enumeration> \n EOrderStatus"{
    PENDING
    PAYED
    CANCELLED
    FULLFILLED
    STALE
}


class Store {
  name
  adress
  taxes
  storeSchedule
}

class IngredientStockService{
  addToStock() 
  removeFromStock()

}

class AccountService{
  getAccount()
  addAccount()
  deleteAccount()
  updateAccount()
}


class PaymentService{
  makePayment()
  addDiscount()
}

class Receipt{
    id
    amount
    date
    customerName
    customerAdress
    taxes
}

class OrderScheduler{
  selectTimeSlot()
  getAvailableTimeSlots()
  filterCooksByStore()
  assignCook()
}

class Cook{
  id
  schedule
  getAvailableTimeSlots()
  assignOrder()
}

' Orders

class OrderÂ {
  id
  pickupDate
  status: EOrderStatus
  getPrice()
  getPreparationTime()
  addItem()
  setPickupDate()
  setStatus()
  setStore()
}

class OrderItem {
  quantity
  increase()
  decrease()
  remove()
}

class Cookie {
  id
  name
  price
  preparationTime
  cookingType
}

class Ingredient{
  id
  name
  price
  ingredientType : EIngredientType
}

class StoreService{
  getStores()
  addStore()
  deleteStore()
  updateStoreTaxes()
  updateStoreSchedule()
}

class PartnerCatalogService{
  getIngredients()
}

class OrderService{
  startOrder()
  addCookies()
  getAvailablePickupDates()
  getOrders()
  getPrice()
  createOrder()
  selectTimeSlot()
  updateStatus()
  makePayment()
}

class CookieService{
  getCookies()
  updateCookie()
  deleteCookie()
  addCookie()
  validateCookie()
  updateStock()
}

' Accounts
class Account {
  id
  username
  password
  accountType: EAccountType
  login()
  logout()
}

class CustomerAccount {
  loyaltyPoints
  hasLoyaltyProgram
  subscribeToLoyaltyProgram()
  updateLoyaltyPoints()
  hasDiscount()
}

class ContactCoordinates {
    email
    phoneNumber
}

BackOfficeSystem -|> CookieOnDemandSystem
CookieOnDemandSystem <|- CustomerSystem
Account <|-- CustomerAccount

ContactCoordinates "1" <-- "1" Account: contact
ContactCoordinates "1" <-- "1" Order: contact


CookieOnDemandSystem "1" --> "1" OrderService
CookieOnDemandSystem "1" --> "1" CookieService
CookieOnDemandSystem "1" --> "1" StoreService
CookieOnDemandSystem "1" --> "1" AccountService

Order "1" *-- "*" OrderItem: orderItems
Order "1" --> "1" Store: store
'Order "*" --> "1" Store: store
'Order -up- "<enumeration> \n EOrderStatus"
OrderItem "1" --> "1" Cookie: cookie

Cookie "1" --> "*" Ingredient: ingredients



OrderService "1" --> "*" Order
OrderService "1" --> "1" OrderScheduler


StoreService "1" -->  "*" Store: stores

CookieService "1" ---->  "1" PartnerCatalogService
CookieService "1" ---->  "*" Cookie
CookieOnDemandSystem "1" --> "1" IngredientStockService
PartnerCatalogService "1" --> "*" Ingredient


OrderService "1" --> "1" PaymentService
PaymentService "1" --> "1" Receipt

AccountService "1" --> "*" Account

Cook "*" <-right- "1" OrderScheduler
Store "1" --> "*" Cook: cooks

"<enumeration> \n EAccountType" -left[hidden]- "<enumeration> \n EIngredientType"
"<enumeration> \n EIngredientType" -left[hidden]- "<enumeration> \n EOrderStatus"
CustomerSystem -[hidden]right- "<enumeration> \n EOrderStatus"

@enduml
